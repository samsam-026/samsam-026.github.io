{"version":3,"sources":["webpack:///./src/components/PostItem.js","webpack:///./src/information/posts.js","webpack:///./src/pages/posts.js"],"names":["PostItem","item","title","description","image","link","place","className","md","src","alt","href","target","rel","postData","Posts","render","Layout","Container","Row","Col","fluid","lg","span","offset","id","map","index","key","Footer","React","Component"],"mappings":"gMAgCeA,IA7Bf,YAA4C,IAAxBC,EAAuB,EAAvBA,KACVC,G,2HADiC,aACUD,EAA3CC,OAAOC,EAAoCF,EAApCE,YAAaC,EAAuBH,EAAvBG,MAAOC,EAAgBJ,EAAhBI,KAAMC,EAAUL,EAAVK,MACzC,OACE,yBAAKC,UAAU,aACb,kBAAC,IAAD,CAAKA,UAAU,sBACZH,EACC,kBAAC,IAAD,CAAKI,GAAI,EAAGD,UAAU,eACpB,yBACEE,IAAG,iBAAmBL,EACtBM,IAAKR,EACLK,UAAU,mBAId,kBAAC,IAAD,CAAKC,GAAI,IAEX,kBAAC,IAAD,CAAKA,GAAI,GACP,wBAAID,UAAU,SACZ,uBAAGI,KAAMN,EAAMO,OAAO,SAASC,IAAI,uBAChCX,IAGJI,GAAS,wBAAIC,UAAU,SAASD,GAChCH,GAAe,uBAAGI,UAAU,WAAWJ,Q,sGCwCnCW,EAlEE,CACf,CACEZ,MAAO,+DACPG,KACE,+GACFC,MAAO,eACPF,MAAO,uBACPD,YACE,2bAEJ,CACED,MAAO,gDACPG,KACE,gGACFC,MAAO,eACPF,MAAO,wBACPD,YACE,uUAEJ,CACED,MAAO,kEACPG,KACE,gHACFC,MAAO,eACPF,MAAO,iBACPD,YACE,sTAEJ,CACED,MAAO,gDACPG,KACE,iHACFC,MAAO,eACPF,MAAO,WACPD,YACE,mdAEJ,CACED,MAAO,+CACPG,KACE,6EACFC,MAAO,eACPF,MAAO,WACPD,YACE,mYAEJ,CACED,MAAO,8CACPG,KACE,qFACFC,MAAO,wBACPF,MAAO,sBACPD,YACE,+UAEJ,CACED,MAAO,0CACPG,KACE,kFACFC,MAAO,wBACPF,MAAO,oBACPD,YACE,0V,4DCrDN,IAAMA,EACJ,2FAEIY,E,gLACJC,OAAA,WACE,OACE,kBAACC,EAAA,EAAD,KACE,kBAAC,IAAD,CAAKf,MAAM,aAAaC,YAAaA,IACrC,kBAAC,IAAD,MACA,4BAAQI,UAAU,eAChB,kBAACW,EAAA,EAAD,CAAWX,UAAU,SACnB,kBAACY,EAAA,EAAD,CAAKZ,UAAU,4BACb,kBAACa,EAAA,EAAD,CAAKb,UAAU,eACb,0CACA,4BAAKJ,OAKb,kBAACe,EAAA,EAAD,CAAWG,OAAK,GACd,kBAACF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKE,GAAI,CAAEC,KAAM,EAAGC,OAAQ,IAC1B,6BAASjB,UAAU,OAAOkB,GAAG,SAC1BX,EAASY,KAAI,SAACzB,EAAM0B,GAAP,OACZ,kBAAC3B,EAAA,EAAD,CAAU4B,IAAKD,EAAO1B,KAAMA,WAMtC,kBAAC4B,EAAA,EAAD,Q,GA3BYC,IAAMC,WAiCXhB","file":"component---src-pages-posts-js-71dab18315f0f90a1b26.js","sourcesContent":["import React from \"react\"\nimport { Row, Col } from \"react-bootstrap\"\n\nfunction PostItem({ item, ...otherProps }) {\n  const { title, description, image, link, place } = item\n  return (\n    <div className=\"post-item\">\n      <Row className=\"align-items-center\">\n        {image ? (\n          <Col md={4} className=\"text-center\">\n            <img\n              src={`/images/posts/${image}`}\n              alt={title}\n              className=\"img img-fluid\"\n            />\n          </Col>\n        ) : (\n          <Col md={2} />\n        )}\n        <Col md={8}>\n          <h4 className=\"title\">\n            <a href={link} target=\"_blank\" rel=\"noopener noreferrer\">\n              {title}\n            </a>\n          </h4>\n          {place && <h6 className=\"place\">{place}</h6>}\n          {description && <p className=\"descrip\">{description}</p>}\n        </Col>\n      </Row>\n    </div>\n  )\n}\nexport default PostItem\n","const postData = [\n  {\n    title: \"How to use the Style Transfer API in React Native with Fritz\",\n    link:\n      \"https://www.freecodecamp.org/news/how-to-use-the-style-transfer-api-in-react-native-with-fritz-e90bc609fb17/\",\n    place: \"freeCodeCamp\",\n    image: \"reactNativeFritz.jpg\",\n    description:\n      \"Fritz is a platform that’s intended to make it easy for developers to power their mobile apps with machine learning features. Currently, it has an SDK for both Android and iOS. Today, we’ll explore how to use the Style Transfer API in React Native. The Style Transfer API styles images or video according to real art masterpieces. There are 11 pre-trained artwork styles, including Van Gogh’s Starry Night and Munch’s Scream, among others.\",\n  },\n  {\n    title: \"How to handle navigation in your Flutter apps\",\n    link:\n      \"https://www.freecodecamp.org/news/how-to-handle-navigation-in-your-flutter-apps-ceaf2f411dcd/\",\n    place: \"freeCodeCamp\",\n    image: \"flutterNavigation.jpg\",\n    description:\n      \"An app page in Flutter is a Widget, a description of the UI portrayed. To make a legitimate app, you need many of these pages, displaying a multitude of features. It’s all well and fine after you create a new page. But, how do you move between them?\\n\\nQuite simple: you use the Navigator Class, inbuilt in the Flutter SDK.\",\n  },\n  {\n    title: \"A first look at firstBorn, React Native’s new component library\",\n    link:\n      \"https://www.freecodecamp.org/news/a-first-look-at-firstborn-react-natives-new-component-library-51403077a632/\",\n    place: \"freeCodeCamp\",\n    image: \"firstBorn.jpeg\",\n    description:\n      \"first-born is a React Native UI Component Framework, which follows the design methodology Atomic Design by Brad Frost. Version 1.0.0 was recently published as an npm module on the 1st of April (it ain’t no joke though…). In this article, we will see a demo of the existing components offered by first-born.\",\n  },\n  {\n    title: \"A simplified introduction to Dart and Flutter\",\n    link:\n      \"https://www.freecodecamp.org/news/https-medium-com-rahman-sameeha-whats-flutter-an-intro-to-dart-6fc42ba7c4a3/\",\n    place: \"freeCodeCamp\",\n    image: \"dart.jpg\",\n    description:\n      \"It all began in 2011: Xamarin, now a Microsoft-owned company, came up with a solution for hybrid mobile apps through its signature product, Xamarin SDK with C#. And thus began the revolution of hybrid mobile applications, the ease in writing one code base for many platforms. Ionic sprung up in 2013 with its first release by Drifty Co, soon after Facebook followed with React Native. Now we can watch Google’s turn at putting its fingers in the pie with Flutter.\",\n  },\n  {\n    title: \"How to Create a CRUD To-do App Using Ionic 3\",\n    link:\n      \"https://www.freecodecamp.org/news/creating-a-crud-to-do-app-using-ionic-4/\",\n    place: \"freeCodeCamp\",\n    image: \"crud.jpg\",\n    description:\n      \"Hybris mobile technology creates mobile apps using the easier to learn languages; HTML, CSS, and JavaScript. The beauty of developing a hybrid mobile app is the fact that they can be compiled to work with any platform. Ionic is one of the popular frameworks to make your own hybrid mobile app. It will be used in this post, alongside Firebase, to create a simple To-do list CRUD app.\",\n  },\n  {\n    title: \"Using Firebase’s Cloud Firestore in Flutter\",\n    link:\n      \"https://heartbeat.fritz.ai/using-firebases-cloud-firestore-in-flutter-79a79ec5303a\",\n    place: \"Heartbeat by Fritz.ai\",\n    image: \"cloudFirestore.jpeg\",\n    description:\n      \"Very rarely do we find mobile apps that have no connection to a backend of any sort. There are many services and platforms like Azure or AWS, but one Google product stands out as well: Firebase. It’s easy to use, scalable and—most importantly—free. In this tutorial, we’ll explore how to connect our Flutter mobile app to Firebase.\",\n  },\n  {\n    title: \"Firebase User Authentication in Flutter\",\n    link:\n      \"https://heartbeat.fritz.ai/firebase-user-authentication-in-flutter-1635fb175675\",\n    place: \"Heartbeat by Fritz.ai\",\n    image: \"firebaseAuth.jpeg\",\n    description:\n      \"In our last tutorial, we used Firebase to store and keep track of the tasks we needed to complete. But that approach wasn’t customized to a specific user, i.e. they all got the same list of tasks. One way of personalizing these tasks for different users is to include user authentication. And that’s exactly what we’ll be doing in this post.\",\n  },\n]\n\nexport default postData\n","import React from \"react\"\nimport { Container, Row, Col } from \"react-bootstrap\"\nimport postData from \"../information/posts\"\nimport PostItem from \"../components/PostItem\"\nimport TopNavBar from \"../navigation/NavBar\"\nimport Footer from \"../navigation/Footer\"\nimport Layout from \"../components/Layout\"\nimport SEO from \"../components/seo\"\n\nconst description =\n  \"A list of my blog posts in Hybrid Mobile Technology, primarily React Native and Flutter.\"\n\nclass Posts extends React.Component {\n  render() {\n    return (\n      <Layout>\n        <SEO title=\"Blog Posts\" description={description} />\n        <TopNavBar />\n        <header className=\"masthead sm\">\n          <Container className=\"h-100\">\n            <Row className=\"h-100 align-items-center\">\n              <Col className=\"text-center\">\n                <h2>Blog Posts</h2>\n                <h5>{description}</h5>\n              </Col>\n            </Row>\n          </Container>\n        </header>\n        <Container fluid>\n          <Row>\n            <Col lg={{ span: 8, offset: 2 }}>\n              <section className=\"py-5\" id=\"about\">\n                {postData.map((item, index) => (\n                  <PostItem key={index} item={item} />\n                ))}\n              </section>\n            </Col>\n          </Row>\n        </Container>\n        <Footer />\n      </Layout>\n    )\n  }\n}\n\nexport default Posts\n"],"sourceRoot":""}